---
name: dispatch

on:
  pull_request:
  workflow_dispatch:
    inputs:
      main_branch:
        description: "Main branch for coverage/tmate."
        type: string
        required: false
        default: "main"
      main_os:
        description: "Main os for coverage/tmate."
        type: choice
        default: "ubuntu-latest"
        options:
          - "ubuntu-latest"
      main_py_ver:
        description: "Main python version for coverage/tmate."
        type: choice
        default: "3.10"
        options:
          - "3.11"
          - "3.10"
          - "3.9"
      tmate:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate). This is only for main strategy and others will be stopped.'
        required: false
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_matrix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11", "3.10", "3.9"]
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check is main
        id: is_main
        run: |
          if [ "${{ github.ref }}" = "refs/heads/${{ inputs.main_branch }}" ] && [ "${{ matrix.os }}" = "${{ inputs.main_os }}" ] && [ "${{ matrix.python-version }}" = "${{ inputs.main_py_ver }}" ];then
            echo "IS_MAIN=1" >> $GITHUB_ENV
            is_main=1
          else
            echo "IS_MAIN=0" >> $GITHUB_ENV
            is_main=0
          fi
          if [ "${{ inputs.tmate }}" = "true" ];then
            if [ "$is_main" = 0 ];then
              echo "Tmate is enabled and this is not main, skip tests"
              exit 1
            fi
            echo "DEBUG=1" >> $GITHUB_ENV
          else
            echo "DEBUG=0" >> $GITHUB_ENV
          fi
      - uses: rcmdnk/python-action@v1
        with:
          coverage-push: "${{ env.IS_MAIN }}"
          coverage-push-condition: "branch=${{ inputs.main_branch }}, os=${{ inputs.main_os }}, python_version=${{ inputs.main_py_ver }}"
          pre-commit: "${{ env.IS_MAIN }}"
          tmate: "${{ env.DEBUG }}"
