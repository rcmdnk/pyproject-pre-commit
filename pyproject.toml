[tool.poetry]
name = "pyproject-pre-commit"
version = "0.0.12"
description = "pre-commit hooks for python projects using pyproject.toml."
authors = ["rcmdnk <rcmdnk@gmail.com>"]
repository = "https://github.com/rcmdnk/pyproject-pre-commit"
homepage = "https://github.com/rcmdnk/pyproject-pre-commit"
readme = "README.md"
license = "Apache-2.0"
keywords = ["pre-commit", "pyproject.toml", "poetry"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
pre-commit = "3.3.2"
black = "23.3.0"
blacken-docs = "1.13.0"
flake8-pyproject = "1.2.3"
flake8-annotations-complexity = "0.0.7"
flake8-bugbear = "23.5.9"
flake8-builtins = "2.1.0"
flake8-comprehensions = "3.12.0"
flake8-debugger = "4.1.2"
flake8-docstrings = "1.7.0"
flake8-executable = "2.1.3"
flake8-pep3101 = "^2.0.0"
flake8-print = "5.0.0"
flake8-rst-docstrings = "0.3.0"
flake8-string-format = "0.3.0"
pep8-naming = "0.13.3"
pycodestyle = "2.10.0"
autoflake = "2.1.1"
autopep8 = "2.0.2"
isort = "5.12.0"
mypy = "1.3.0"
bandit = {extras = ["toml"], version = "1.7.5"}
shellcheck-py = "0.9.0.2"
mdformat = "0.7.16"
mdformat-gfm = "0.3.5"
mdformat-frontmatter = "2.0.1"
mdformat-footnote = "0.1.1"

[tool.poetry.group.dev.dependencies]
pytest = "7.3.1"
pytest-cov = "4.1.0"
pytest-xdist = "3.3.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-n auto"
testpaths = ["tests",]

[tool.black]
line-length = 79

[tool.autoflake]
remove-all-unused-imports = true
expand-star-imports = true
remove-duplicate-keys = true
remove-unused-variables = true

[tool.autopep8]
ignore = "E203,E501,W503"
recursive = true
aggressive = 3

[tool.isort]
profile = "black"
line_length = 79

[tool.flake8]
# E203 is not PEP8 compliant and black insert space around slice: [Frequently Asked Questions - Black 22.12.0 documentation](https://black.readthedocs.io/en/stable/faq.html#why-are-flake8-s-e203-and-w503-violated)
# E501: Line too long. Disable it to allow long lines of comments and print lines which black allows.
# W503 is the counter part of W504, which follows current PEP8: [Line break occurred before a binary operator (W503)](https://www.flake8rules.com/rules/W503.html)
# D100~D106: Missing docstrings other than class (D101)
# D401: First line should be in imperative mood
ignore = "E203,E501,W503,D100,D102,D103,D104,D105,D106,D401"
max-complexity = 10
docstring-convention = "numpy"

[tool.bandit]
exclude_dirs = ["tests"]

[tool.mypy]
files = ["src/**/*.py"]
strict = true
warn_return_any = false
ignore_missing_imports = true
scripts_are_modules = true

[tool.poetry.scripts]
ppc = "pyproject_pre_commit:main"
