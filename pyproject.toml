[project]
name = "pyproject-pre-commit"
version = "0.3.0"
description = "pre-commit hooks for python projects using pyproject.toml."
authors = [
  { name = "rcmdnk", email = "rcmdnk@gmail.com" }
]
repository = "https://github.com/rcmdnk/pyproject-pre-commit"
homepage = "https://github.com/rcmdnk/pyproject-pre-commit"
readme = "README.md"
license = "Apache-2.0"
keywords = ["pre-commit", "pyproject.toml", "poetry"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
requires-python = ">=3.9.0"
dependencies = [
  "pre-commit >= 4.0.0",
  "black >= 24.3.0",
  "blacken-docs >= 1.16.0",
  "flake8-pyproject >= 1.2.3",
  "flake8-annotations-complexity >= 0.0.8",
  "flake8-bugbear >= 24.0.0",
  "flake8-builtins >= 2.1.0",
  "flake8-comprehensions >= 3.14.0",
  "flake8-debugger >= 4.1.2",
  "flake8-docstrings >= 1.7.0",
  "flake8-executable >= 2.1.3",
  "flake8-pep3101 >= 2.0.0",
  "flake8-print >= 5.0.0",
  "flake8-rst-docstrings >= 0.3.0",
  "flake8-string-format >= 0.3.0",
  "pep8-naming >= 0.14.0",
  "pycodestyle >= 2.11.0",
  "autoflake >= 2.2.1",
  "autopep8 >= 2.0.4",
  "isort >= 5.12.0",
  "bandit[toml] >= 1.7.5",
  "mypy >= 1.5.1",
  "numpydoc >= 1.8.0",
  "shellcheck-py >= 0.9.0.5",
  "mdformat >= 0.7.17",
  "mdformat-gfm >= 0.3.5",
  "mdformat-frontmatter >= 2.0.1",
  "mdformat-footnote >= 0.1.1",
]

[project.optional-dependencies]
ruff = [
  "ruff >= 0.7.2",
]

[tool.poetry.extras]
ruff = ["ruff"]

[dependency-groups]
dev = [
  "pytest >= 8.0.0",
  "pytest-cov >= 6.0.0",
  "pytest-xdist >= 3.3.1",
  "ruff >= 0.7.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = "-n auto"
testpaths = ["tests",]

[tool.ruff]
line-length = 79
# quote-style = "single"

[tool.ruff.lint]
## select = ["ALL"]
## select = ["E4", "E7", "E9", "F"]  # default, black compatible
select = [  # similar options to black, flake8 + plugins, isort etc...)
  #"E4",  # Import (comparable to black)
  #"E7",  # Indentation (comparable to black)
  #"E9",  # Blank line (comparable to black)
  "F",   # String (comparable to black)
  "I",   # Import order (comparable to isort)
  "S",   # flake8-bandit (comparable to bandit)
  "B",   # flake8-bugbear
  "A",   # flake8-builtins
  "C4",   # flake8-comprehensions
  "T10",  # flake8-debugger
  "EXE",  # flake8-executable
  "T20", # flake8-print
  "N", # pep8-naming
  "E", # pycodestyle
  "W", # pycodestyle
  "C90", # mccabe
]

ignore = [
 "E203", # Not PEP8 compliant and black insert space around slice: [Frequently Asked Questions - Black 22.12.0 documentation](https://black.readthedocs.io/en/stable/faq.html#why-are-flake8-s-e203-and-w503-violated)
 "E501", # Line too long. Disable it to allow long lines of comments and print lines which black allows.
# "E704", # NOT in ruff. multiple statements on one line (def). This is inconsistent with black >= 24.1.1 (see ttps://github.com/psf/black/pull/3796)
# "W503", # NOT in ruff. is the counter part of W504, which follows current PEP8: [Line break occurred before a binary operator (W503)](https://www.flake8rules.com/rules/W503.html)
 "D100", "D102", "D103", "D104", "D105", "D106", # Missing docstrings other than class (D101)
 "D401", # First line should be in imperative mood
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
docstring-code-format = true

[tool.black]
line-length = 79

[tool.autoflake]
remove-all-unused-imports = true
expand-star-imports = true
remove-duplicate-keys = true
remove-unused-variables = true

[tool.autopep8]
ignore = "E203,E501,W503"
recursive = true
aggressive = 3

[tool.isort]
profile = "black"
line_length = 79

[tool.flake8]
# E203 is not PEP8 compliant and black insert space around slice: [Frequently Asked Questions - Black 22.12.0 documentation](https://black.readthedocs.io/en/stable/faq.html#why-are-flake8-s-e203-and-w503-violated)
# E501: Line too long. Disable it to allow long lines of comments and print lines which black allows.
# E704: multiple statements on one line (def). This is inconsistent with black >= 24.1.1 (see ttps://github.com/psf/black/pull/3796)
# W503 is the counter part of W504, which follows current PEP8: [Line break occurred before a binary operator (W503)](https://www.flake8rules.com/rules/W503.html)
# D100~D106: Missing docstrings other than class (D101)
# D401: First line should be in imperative mood
ignore = "E203,E501,E704,W503,D100,D102,D103,D104,D105,D106,D401"
max-complexity = 10
docstring-convention = "numpy"

[tool.bandit]
exclude_dirs = ["tests"]

[tool.mypy]
files = ["src/**/*.py"]
strict = true
warn_return_any = false
ignore_missing_imports = true
scripts_are_modules = true
install_types = true
non_interactive = true

[tool.numpydoc_validation]
checks = [
    "all",   # report on all checks, except the below
    "EX01",  # "No examples section found"
    "ES01",  # "No extended summary found"
    "SA01",  # "See Also section not found"
    "GL08",  # "The object does not have a docstring"
    "PR01",  # "Parameters {missing_params} not documented"
    "PR02",  # "Unknown parameters {unknown_params}"
    "RT01",  # "No Returns section found"
]

[tool.poetry.scripts]
ppc = "pyproject_pre_commit:main"
